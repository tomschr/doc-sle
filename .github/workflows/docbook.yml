---
name: Validate

on:
  push

jobs:
  list-dc-files:
    runs-on: ubuntu-latest
    outputs:
      file: ${{ steps.set-dc-files.outputs.file }}
      # generate output name file by using inner step output
    steps:
      - name: Output environment variables
        run: env
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJSON(github) }}
        run: echo "$GITHUB_CONTEXT"

      - uses: actions/checkout@v2

      - name: Create a list of DC files
        id: set-dc-files
        # Give it an id to handle to get step outputs in the outputs key above
        run: |
          shopt -s extglob
          DC=$(ls DC-*-all | jq -R -s -c 'split("\n")[:-1]')
          if [[ -f '.travis-check-docs' ]]; then
            DC=$(cat '.travis-check-docs' | tr ' ' '\n' | jq -R -s -c 'split("\n")[:-1]')
          elif [[ -z "$DC" ]]; then
            DC=$(ls DC-* | tr ' ' '\n' | jq -R -s -c 'split("\n")[:-1]')
          fi
          echo "$DC"
          echo "::set-output name=file::$DC"
        # Define step output named file base on ls command transformed
        # to JSON thanks to jq


  validate:
    runs-on: ubuntu-latest
    needs: [list-dc-files]  # Depends on previous job
    strategy:
      matrix:
        # List matrix strategy from directories dynamically
        dc-file: ${{ fromJson(needs.list-dc-files.outputs.file) }}

    steps:
      - uses: actions/checkout@v2

      - uses: tomschr/xml-doc-action@main
        with:
          command: |
            daps -vv --builddir=build/${{matrix.dc-file}} -d ${{matrix.dc-file}} validate && ls build/
